#!/usr/bin/env Rscript
if (!('./data' %in% list.dirs(recursive = FALSE))) {
  cat('This must be run in the root of the data owners repository.\n')
  quit(status = 1)
}

library(ggplot2)
library(scales)
library(stringr)

DOMAIN = 'http://dataowners.thomaslevine.com/'

owner.responses <- read.csv('/tmp/dataowners.csv', stringsAsFactors = TRUE)
data.owners <- read.csv('data/for-analysis.csv', stringsAsFactors = FALSE)

sent.messages <- read.csv('data/sent-messages.csv', stringsAsFactors = FALSE)
sent.messages$hash <- str_replace(str_match(sent.messages$message, paste0(DOMAIN, '([^/]+)'))[,1], DOMAIN, '')
sent.messages$sent <- sent.messages$notes == '' | grepl('messages.py', sent.messages$notes)
sent.messages$dataset <- sent.messages$message <- sent.messages$notes <- NULL

cube <- merge(merge(sent.messages[c('hash', 'sent')],
                    owner.responses,
                    by = 'hash', all.x = TRUE, all.y = FALSE),
              data.owners, by.x = 'hash', by.y = 'owner.hash',
              all.x = TRUE, all.y = FALSE)
.levels <- c('yes', 'no', 'could not send', 'no response')
cube$result <- factor(cube$answer, levels = .levels)
cube$result[is.na(cube$result)] <- ifelse(cube$sent[is.na(cube$result)], 'no response', 'could not send')
cube$answer <- cube$sent <- NULL

#p1 <- ggplot(cube) +
#        aes(x = owner.id, y = n.datasets, fill = 
